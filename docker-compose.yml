version: "3.1"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
    - "2181:2181"
    - "2888:2888"
    - "3888:3888"
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
    - ZOOKEEPER_SERVER_ID=1
    - ZOOKEEPER_CLIENT_PORT=2181
    - ZOOKEEPER_TICK_TIME=2000
    - ZOOKEEPER_INIT_LIMIT=5
    - ZOOKEEPER_SYNC_LIMIT=2
    - ZOOKEEPER_SERVERS=zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    - "9091:9091"
    environment:
    - KAFKA_LISTENERS=LISTENER_INT://kafka:29091,LISTENER_EXT://0.0.0.0:9091
    - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka:29091,LISTENER_EXT://localhost:9091
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
    - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_BROKER_ID=1
    - ZOOKEEPER=zookeeper:2181

  kafka1:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    - "9092:9092"
    environment:
    - KAFKA_LISTENERS=LISTENER_INT://kafka1:29092,LISTENER_EXT://0.0.0.0:9092
    - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka1:29092,LISTENER_EXT://localhost:9092
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
    - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_BROKER_ID=2
    - ZOOKEEPER=zookeeper:2181

  kafka2:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
    - "9093:9093"
    environment:
    - KAFKA_LISTENERS=LISTENER_INT://kafka2:29093,LISTENER_EXT://0.0.0.0:9093
    - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka2:29093,LISTENER_EXT://localhost:9093
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
    - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_BROKER_ID=3
    - ZOOKEEPER=zookeeper:2181

  checkout_pg:
    image: postgres:12
    restart: unless-stopped
    environment:
      POSTGRES_DB: checkout
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d checkout"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "8090:5432"
    volumes:
      - ./checkout:/var/lib/postgresql/data
    networks:
      - checkout

  checkout:
    image: checkout
    build: ./checkout/
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - checkout_pg
    networks:
      - checkout
      - outer

  loms_pg:
    image: postgres:12
    restart: unless-stopped
    environment:
      POSTGRES_DB: loms
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d loms"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "8091:5432"
    volumes:
      - ./loms:/var/lib/postgresql/data
    networks:
      - loms

  notifications:
    image: notifications
    build: ./notifications/
    restart: unless-stopped

  loms:
    image: loms
    build: ./loms/
    restart: unless-stopped
    depends_on:
      - loms_pg
    ports:
      - "8081:8081"
    networks:
      - loms
      - outer


networks:
  checkout:
    driver: bridge
  loms:
    driver: bridge
  outer:
    driver: bridge